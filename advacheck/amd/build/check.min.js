define(["jquery", "core/tree"], function (i) { return { processingDocs: [], addPlagiarismCtrlButtons: function () { var r = this; i(document).on("click", ".update_report", function () { var e = i(i(".typeid", i(this).parent())[0]).text(); return r.processingDocs[e] || (r.processingDocs[e] = 1, i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", dataType: "html", data: { action: "update_report", typeid: e, sesskey: M.cfg.sesskey }, success: function (a) { r.setVerfyResult(a, e) }, error: function (a, s, t) { console.log(t), console.log(e), console.log(a), console.log(s) } })), !1 }), i(document).on("click", ".advacheck-checkbtn", function () { var s = i(this).attr("class").split(/\s+/)[1]; if (r.processingDocs[s]) return !1; r.processingDocs[s] = 1; var e, a = i(i(".advacheck-data." + s + " .doctype")[0]).text(), t = i(i(".advacheck-data." + s + " .courseid")[0]).text(); return e = 1 != a ? { action: "checktext", typeid: s, doctype: a, courseid: t, assignment: i(i(".advacheck-data." + s + " .assignment")[0]).text(), discussion: i(i(".advacheck-data." + s + " .discussion")[0]).text(), userid: i(i(".advacheck-data." + s + " .userid")[0]).text(), content: i(i(".advacheck-data." + s + " .content")[0]).text(), sesskey: M.cfg.sesskey } : { typeid: s, action: "checkfile", courseid: t, sesskey: M.cfg.sesskey }, i(".advacheck-checkbtn." + s).hide(), i(".advacheck-gray.checking." + s).removeClass("advacheck-hidden"), i(".advacheck-loader." + s).removeClass("advacheck-hidden"), i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", sesskey: M.cfg.sesskey, method: "POST", dataType: "html", cache: !1, data: e, success: function (a) { r.setVerfyResult(a, s) }, error: function (a, s, t) { console.log(t), console.log(e), console.log(a), console.log(s) } }), !1 }) }, verifyStatus: [], updateVerifyResult: function (e, s) { i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", dataType: "html", data: { action: "update_report", typeid: e, sesskey: M.cfg.sesskey }, success: function (a) { s.setVerfyResult(a, e) }, error: function (a, s, t) { console.log(t), console.log(e), console.log(a), console.log(s) } }) }, setVerfyResult: function (s, t) { try { var a; (s = JSON.parse(s)).check_studs && ("none" === s.check_studs ? i(".stud_check-" + t).hide() : i(".stud_check-" + t).html(s.check_studs)), 4 == s.status || 5 == s.status ? (i(".advacheck-loader." + t).addClass("advacheck-hidden"), i(".advacheck-gray.checking." + t).addClass("advacheck-hidden"), i(".check_notice." + t).addClass("advacheck-hidden"), s.docid && i(".advacheck-data." + t + " .docid").html(s.docid), s.plagiarism && i("span.plagiarism-" + t).html(s.plagiarism), s.selfcite && i("span.selfcite-" + t).html(s.selfcite), s.legal && i("span.legal-" + t).html(s.legal), s.originality && i("span.originality-" + t).html(s.originality), s.issuspicious && s.report && (i("span.advacheck-suspicious." + t).attr("class", "advacheck-suspicious " + t + " advacheck-suspiciouson"), i("a.advacheck-suspicious_lnk." + t).attr("href", s.report)), s.report && (a = (a = (a = (a = (a = i(".advacheck-plagiarismresult." + t).attr("title")).replace("{$a->plagiarism}%", s.plagiarism)).replace("{$a->selfcite}%", s.selfcite)).replace("{$a->originality}%", s.originality)).replace("{$a->legal}%", s.legal), a = i(".advacheck-plagiarismresult." + t).attr("title", a), i(".advacheck-report-" + t).attr("href", s.report).show()), i(".advacheck-clear." + t).removeClass("advacheck-hidden"), s.class && (i(".advacheck-plagiarismresult." + t).attr("class", "badge badge-pill advacheck-plagiarismresult " + t + " " + s.class), i(".fa-solid.fa-arrow-right." + t).attr("class", "fa-solid fa-arrow-right " + t + " " + s.iconclass), i(".invisibleicon." + t).attr("class", "fa-solid  " + s.icontype + " " + t + " " + s.iconclass), i(".fa-solid.fa-circle-check." + t).attr("class", "fa-solid fa-circle-check " + t + " " + s.iconclass), i(".fa-solid.fa-circle-exclamation." + t).attr("class", "fa-solid fa-circle-exclamation " + t + " " + s.iconclass)), this.verifyStatus[t] && clearInterval(this.verifyStatus[t]), this.processingDocs[t] && delete this.processingDocs[t]) : s.error ? (i(".advacheck-loader." + t).addClass("advacheck-hidden"), i(".advacheck-data.badge.badge-pill.advacheck-gray.checking." + t).hide(), i(".advacheck." + t).addClass("advacheck-hidden"), i(".advacheck-plagiarismresult." + t).attr("class", "badge badge-pill advacheck-plagiarismresult " + t + " advacheck-clear"), i(".advacheck-plagiarismresult." + t).html(s.error), this.verifyStatus[t] && clearInterval(this.verifyStatus[t]), this.processingDocs[t] && delete this.processingDocs[t]) : this.verifyStatus[t] || (this.verifyStatus[t] = setInterval(this.updateVerifyResult, 6e4, t, this)) } catch (a) { i(".advacheck-loader." + t).addClass("advacheck-hidden"), i(".advacheck-data.badge.badge-pill.advacheck-gray.checking." + t).hide(), i(".advacheck." + t).addClass("advacheck-hidden"), i(".advacheck-plagiarismresult." + t).addClass("class", "badge badge-pill advacheck-plagiarismresult " + t + " " + s.class), i(".advacheck-plagiarismresult." + t).html(s.error), console.log(a.message), console.log(s), this.verifyStatus[t] && clearInterval(this.verifyStatus[t]), this.processingDocs[t] && delete this.processingDocs[t] } return !1 }, checkTarif: function () { i(document).on("click", ".test-tarif", function () { var a = i("#id_login").val(), s = i("#id_password").val(), t = i("#id_soap_wsdl").val(), e = i("#id_uri").val(); i("#id_tarif_info").show(); var r = { action: "checktarif", login: a, password: s, soap_wsdl: t, uri: e, sesskey: M.cfg.sesskey }; return i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", dataType: "html", data: r, success: function (a) { (a = JSON.parse(a)) && (i("#id_tarif_info").html(a), i("#id_tarif_info").show()) }, error: function (a, s, t) { console.log(t), console.log(r), console.log(a), console.log(s) } }), !1 }) }, changeMode: function () { i(".changetype").change(function () { var a, s = i(this).attr("name"), t = null, e = null; "disp_notices" === s || "check_stud_lim" === s || "works_types" === s ? (t = i(this).val(), e = (a = i(this).attr("class").split(" "))[a.length - 1]) : (e = i(this).val(), t = Number(i(this).is(":checked"))), i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", data: { action: "changetype", cm: e, doctype: s, value: t, sesskey: M.cfg.sesskey } }) }), i(".changemode").change(function () { var a = i(this).attr("name"), s = i(this).val(); i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", data: { action: "changeMode", cm: a, mode: s, sesskey: M.cfg.sesskey } }) }) } } });
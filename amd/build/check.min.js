define(["jquery", "core/tree"], function (i) { return { processingDocs: [], addPlagiarismCtrlButtons: function () { var r = this; i(document).ready(function () { return i(".checking_img").css("display", "inline"), !1 }), i(document).on("click", ".update_report", function () { var a = i(i(".typeid", i(this).parent())[0]).text(); return r.processingDocs[a] || (r.processingDocs[a] = 1, i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", dataType: "html", data: { action: "update_report", typeid: a, sesskey: M.cfg.sesskey }, success: function (s) { r.setVerfyResult(s, a) }, error: function (s, t, e) { console.log(e), console.log(a), console.log(s), console.log(t) } })), !1 }), i(document).on("click", ".advacheck-checkbtn", function () { var t = i(this).attr("class").split(/\s+/)[1]; if (r.processingDocs[t]) return !1; r.processingDocs[t] = 1; var a, s = i(i(".advacheck-data." + t + " .doctype")[0]).text(), e = i(i(".advacheck-data." + t + " .courseid")[0]).text(); return a = 1 != s ? { action: "checktext", typeid: t, doctype: s, courseid: e, assignment: i(i(".advacheck-data." + t + " .assignment")[0]).text(), discussion: i(i(".advacheck-data." + t + " .discussion")[0]).text(), userid: i(i(".advacheck-data." + t + " .userid")[0]).text(), content: i(i(".advacheck-data." + t + " .content")[0]).text(), sesskey: M.cfg.sesskey } : { typeid: t, action: "checkfile", courseid: e, sesskey: M.cfg.sesskey }, i(".advacheck-checkbtn." + t).hide(), i(".advacheck-loader." + t).show(), i(".advacheck-data.advacheck-green.checking." + t).css("display", "inline-grid"), i(".advacheck-data.advacheck-green.checking." + t).show(), i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", sesskey: M.cfg.sesskey, method: "POST", dataType: "html", cache: !1, data: a, success: function (s) { r.setVerfyResult(s, t) }, error: function (s, t, e) { console.log(e), console.log(a), console.log(s), console.log(t) } }), !1 }) }, verifyStatus: [], updateVerifyResult: function (a, t) { i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", dataType: "html", data: { action: "update_report", typeid: a, sesskey: M.cfg.sesskey }, success: function (s) { t.setVerfyResult(s, a) }, error: function (s, t, e) { console.log(e), console.log(a), console.log(s), console.log(t) } }) }, setVerfyResult: function (t, e) { try { (t = JSON.parse(t)).check_studs && ("none" === t.check_studs ? i(".stud_check-" + e).hide() : i(".stud_check-" + e).html(t.check_studs)), 4 == t.status || 5 == t.status ? (i(".advacheck-loader." + e).hide(), i(".advacheck-data.advacheck-green.checking." + e).hide(), i(".check_notice-" + e).hide(), t.docid && i(".advacheck-data." + e + " .docid").html(t.docid), t.plagiarism && i("span.plagiarism-" + e).html(t.plagiarism), t.selfcite && i("span.selfcite-" + e).html(t.selfcite), t.legal && i("span.legal-" + e).html(t.legal), t.originality && i("span.originality-" + e).html(t.originality), t.issuspicious && t.report && (i("span.advacheck-suspicious-" + e).css("display", "inline-block"), i("span.advacheck-suspicious-" + e).attr("href", t.report).show()), t.report && (i(".advacheck-report-" + e).attr("href", t.report).show(), t.issuspicious && (i("span." + e + ".advacheck-suspicious").css("display", "inline-block"), i("a." + e + ".advacheck-suspicious_lnk").attr("href", t.report).show())), i(".advacheck_help." + e).show(), t.class && i(".advacheck." + e).attr("class", "advacheck " + e + " " + t.class), i(".advacheck." + e).css("display", "inline-block"), i(".advacheck." + e).css("-webkit-border-radius", "4px"), i(".advacheck." + e).css("-moz-border-radius", "4px"), i(".advacheck." + e).css("border-radius", "4px"), i(".advacheck." + e).css("padding", "3px 7px"), i(".advacheck." + e).css("font-size", "80%"), i(".advacheck." + e).css("line-height", "110%"), i(".advacheck." + e).show(), this.verifyStatus[e] && clearInterval(this.verifyStatus[e]), this.processingDocs[e] && delete this.processingDocs[e]) : t.error ? (i(".advacheck." + e).attr("class", "advacheck-" + e + " " + t.class), i(".advacheck." + e).html(t.error), this.verifyStatus[e] && clearInterval(this.verifyStatus[e]), this.processingDocs[e] && delete this.processingDocs[e]) : this.verifyStatus[e] || (this.verifyStatus[e] = setInterval(this.updateVerifyResult, 6e4, e, this)) } catch (s) { i(".advacheck-checkbtn." + e).show(), i(".advacheck-loader." + e).hide(), i(".advacheck." + e).html(t.error).show(), console.log(s.message), console.log(t), this.verifyStatus[e] && clearInterval(this.verifyStatus[e]), this.processingDocs[e] && delete this.processingDocs[e] } return !1 }, checkTarif: function () { i(document).on("click", ".test-tarif", function () { var s = i("#id_login").val(), t = i("#id_password").val(), e = i("#id_soap_wsdl").val(), a = i("#id_uri").val(); i("#id_tarif_info").show(); var r = { action: "checktarif", login: s, password: t, soap_wsdl: e, uri: a, sesskey: M.cfg.sesskey }; return i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", dataType: "html", data: r, success: function (s) { (s = JSON.parse(s)).message && (i("#id_tarif_info").html(s.message), i("#id_tarif_info").show()) }, error: function (s, t, e) { console.log(e), console.log(r), console.log(s), console.log(t) } }), !1 }) }, changeMode: function () { i(".changetype").change(function () { var s, t = i(this).attr("name"), e = null, a = null; "disp_notices" === t || "check_stud_lim" === t || "works_types" === t ? (e = i(this).val(), a = (s = i(this).attr("class").split(" "))[s.length - 1]) : (a = i(this).val(), e = Number(i(this).is(":checked"))), i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", data: { action: "changetype", cm: a, doctype: t, value: e, sesskey: M.cfg.sesskey } }) }), i(".changemode").change(function () { var s = i(this).attr("name"), t = i(this).val(); i.ajax({ url: M.cfg.wwwroot + "/plagiarism/advacheck/ajax.php", method: "POST", data: { action: "changeMode", cm: s, mode: t, sesskey: M.cfg.sesskey } }) }) } } });